>>> from 101-lazy_matrix_mul import lazy_matrix_mul

# Test normal multiplication
>>> lazy_matrix_mul([[1, 2], [3, 4]], [[5, 6], [7, 8]])
array([[19, 22],
       [43, 50]])

>>> lazy_matrix_mul([[1]], [[4]])
array([[4]])

# Test multiplication with floats
>>> lazy_matrix_mul([[1.5, 2.5]], [[3.5], [4.5]])
array([[21.25]])

# Test with different dimensions
>>> lazy_matrix_mul([[1, 2, 3]], [[4], [5], [6]])
array([[32]])

# Test empty matrix
>>> lazy_matrix_mul([], [[1, 2], [3, 4]])
Traceback (most recent call last):
    ...
ValueError: m_a can't be empty

>>> lazy_matrix_mul([[1, 2]], [])
Traceback (most recent call last):
    ...
ValueError: m_b can't be empty

# Test if rows are not the same size
>>> lazy_matrix_mul([[1, 2], [3, 4]], [[1, 2]])
Traceback (most recent call last):
    ...
TypeError: each row of m_a must be of the same size

>>> lazy_matrix_mul([[1, 2], [3]], [[1], [2]])
Traceback (most recent call last):
    ...
TypeError: each row of m_a must be of the same size

# Test if elements are not integers or floats
>>> lazy_matrix_mul([[1, 2], [3, 'a']], [[1, 2], [3, 4]])
Traceback (most recent call last):
    ...
TypeError: m_a should contain only integers or floats

>>> lazy_matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, None]])
Traceback (most recent call last):
    ...
TypeError: m_b should contain only integers or floats

# Test incompatible dimensions
>>> lazy_matrix_mul([[1, 2]], [[3, 4], [5, 6]])
Traceback (most recent call last):
    ...
ValueError: m_a and m_b can't be multiplied

# Test if either m_a or m_b is not a list
>>> lazy_matrix_mul(1, [[1, 2], [3, 4]])
Traceback (most recent call last):
    ...
TypeError: m_a must be a list

>>> lazy_matrix_mul([[1, 2], [3, 4]], 1)
Traceback (most recent call last):
    ...
TypeError: m_b must be a list

